/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.project.hibernate.gui;

import com.project.hibernate.dao.PatientDAO;
import com.project.hibernate.entity.Patient;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tsila
 */
public class PatientPanel extends javax.swing.JPanel implements MouseListener{

    /**
     * Creates new form PatientPanel
     */
    private Patient patient = new Patient();
    public PatientPanel() {
        initComponents();
        setTable();
        selectPatient();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnAjoutPatient = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablePatient = new javax.swing.JTable();
        TxtFieldSearchPatient = new javax.swing.JTextField();
        BtnSearchPatient = new javax.swing.JButton();
        BtnModifierPatient = new javax.swing.JToggleButton();
        BtnSupprimerPatient = new javax.swing.JToggleButton();

        setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        setMinimumSize(new java.awt.Dimension(2, 2));

        BtnAjoutPatient.setForeground(new java.awt.Color(0, 0, 153));
        BtnAjoutPatient.setText("Ajouter");
        BtnAjoutPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAjoutPatientActionPerformed(evt);
            }
        });

        TablePatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "codepat", "Nom", "Prénom", "Sexe", "Adresse"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablePatient);

        TxtFieldSearchPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtFieldSearchPatientActionPerformed(evt);
            }
        });

        BtnSearchPatient.setText("Rechercher");
        BtnSearchPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSearchPatientActionPerformed(evt);
            }
        });

        BtnModifierPatient.setForeground(new java.awt.Color(0, 0, 153));
        BtnModifierPatient.setText("Modifier");
        BtnModifierPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnModifierPatientActionPerformed(evt);
            }
        });

        BtnSupprimerPatient.setForeground(new java.awt.Color(153, 0, 0));
        BtnSupprimerPatient.setText("Supprimer");
        BtnSupprimerPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSupprimerPatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnModifierPatient)
                        .addGap(18, 18, 18)
                        .addComponent(BtnSupprimerPatient)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BtnAjoutPatient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TxtFieldSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtnSearchPatient)
                        .addGap(9, 9, 9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnAjoutPatient)
                    .addComponent(TxtFieldSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSearchPatient))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnSupprimerPatient)
                    .addComponent(BtnModifierPatient))
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TxtFieldSearchPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtFieldSearchPatientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtFieldSearchPatientActionPerformed

    private void BtnModifierPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnModifierPatientActionPerformed
        if (this.patient.getNom() == null) {
                JOptionPane.showMessageDialog(this, "Veuillez sélectionnée un patient.", "Erreur", JOptionPane.ERROR_MESSAGE);
                return;
            } 
        JDialogFormPatient formAjoutPatient = new JDialogFormPatient(null,true,"Update",this.patient);
        System.out.println("Modifier Panel" +this.patient.getCodepat());
        formAjoutPatient.setVisible(true);
        selectPatient();
    }//GEN-LAST:event_BtnModifierPatientActionPerformed

    private void BtnSupprimerPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSupprimerPatientActionPerformed
    //JDialogFormPatient formAjoutPatient = new JDialogFormPatient(null,true,,this.patient,"Delete");
      if (this.patient.getNom() == null) {
                JOptionPane.showMessageDialog(this, "Veuillez sélectionnée un patient.", "Erreur", JOptionPane.ERROR_MESSAGE);
                return;
            }
        JDialogFormPatient formAjoutPatient = new JDialogFormPatient(null,true,this.patient,"Delete");
        System.out.println("Modifier Panel" +this.patient.getCodepat());
        formAjoutPatient.setVisible(true);
        selectPatient();
    }//GEN-LAST:event_BtnSupprimerPatientActionPerformed

    private void BtnSearchPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSearchPatientActionPerformed

         String searchText = TxtFieldSearchPatient.getText().trim();
         System.out.println("Message : ." + searchText );
    
    if (searchText.isEmpty()) {
        selectPatient(); // Recharge toute la liste si la recherche est vide
        return;
    }

    try {
        List<Patient> resultats = patientList.chercherPatients(searchText);
        tableModel.setRowCount(0); // Nettoie la table
        
        if (resultats.isEmpty()) {
             JOptionPane.showMessageDialog(this, "Aucun patient trouvé.", "Erreur", JOptionPane.ERROR_MESSAGE);
        } else {
            resultats.forEach(patient -> tableModel.addRow(new Object[]{
                patient.getCodepat(),
                patient.getNom(),
                patient.getPrenom(),
                patient.getSexe(),
                patient.getAdresse()
            }));
        }
    } catch (Exception e) {
        System.err.println("Erreur lors de la recherche : " + e.getMessage());
    }
    }//GEN-LAST:event_BtnSearchPatientActionPerformed

    private void BtnAjoutPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAjoutPatientActionPerformed
        JDialogFormPatient formAjoutPatient = new JDialogFormPatient(null,true,"New");
        System.out.println("Modifier Panel" +this.patient.getCodepat());
        formAjoutPatient.setVisible(true);
        selectPatient();
    }//GEN-LAST:event_BtnAjoutPatientActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton BtnAjoutPatient;
    private javax.swing.JToggleButton BtnModifierPatient;
    private javax.swing.JButton BtnSearchPatient;
    private javax.swing.JToggleButton BtnSupprimerPatient;
    private javax.swing.JTable TablePatient;
    private javax.swing.JTextField TxtFieldSearchPatient;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

     DefaultTableModel tableModel = new DefaultTableModel(new Object[]{"codepat","Nom","Prenom","Sexe","Adresse"},0);
  private void setTable() {
    TablePatient = new JTable(tableModel);
    TablePatient.setCellSelectionEnabled(true);
    TablePatient.addMouseListener(this);
    jScrollPane1.setViewportView(TablePatient);
    //JScrollPane scrollPane = new JScrollPane(TableMedecin);
    //add(scrollPane); // Ajoute la table dans ton interface (assure-toi que c'est bien placé dans ton layout)
}
   private PatientDAO patientList = new PatientDAO();
  private void selectPatient() {
    tableModel.setRowCount(0); // Réinitialise le tableau
    
    patientList.getAllPatients().forEach(patient -> {
        tableModel.addRow(new Object[]{
            patient.getCodepat(),
            patient.getNom(),
            patient.getPrenom(),
            patient.getSexe(),
            patient.getAdresse()
        });
    });
  }
    @Override
    public void mouseClicked(MouseEvent e) {
          if(e.getSource() == TablePatient){
            if(e.getButton() == MouseEvent.BUTTON1){
                if(e.getClickCount() == 1){
                    int row =  TablePatient.getSelectedRow();
                    if(row != -1){
                        int codepat = Integer.parseInt(TablePatient.getValueAt(row, 0).toString());
                        String nom = TablePatient.getValueAt(row, 1).toString();
                        String prenom = TablePatient.getValueAt(row, 2).toString();
                        String sexe = TablePatient.getValueAt(row, 3).toString();
                        String adresse = TablePatient.getValueAt(row, 4).toString();
                        Patient  patient = new Patient(codepat,nom,prenom,sexe,adresse);
                        System.out.println();
                        this.patient = patient;
                    }
                }
            }
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
   }

    @Override
    public void mouseExited(MouseEvent e) {
    }
}
