/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.project.hibernate.gui;

import com.project.hibernate.dao.MedecinDAO;
import com.project.hibernate.dao.PatientDAO;
import com.project.hibernate.dao.VisiterDAO;
import com.project.hibernate.entity.Medecin;
import com.project.hibernate.entity.Patient;
import com.project.hibernate.entity.Visiter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Date;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
  import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Tsila
 */
public class VisiterPanel extends javax.swing.JPanel implements MouseListener{

    /**
     * Creates new form VisiterPanel
     */
    private Visiter visiter = new Visiter();
    public VisiterPanel() {
        initComponents();
        setTable();
        selectVisiter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableVisiter = new javax.swing.JTable();
        BtnAjoutVisiter = new javax.swing.JToggleButton();
        BtnModifierVisiter = new javax.swing.JToggleButton();
        BtnSupprimerVisiter = new javax.swing.JToggleButton();

        TableVisiter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Medecin", "Patient", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableVisiter.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        TableVisiter.setMinimumSize(new java.awt.Dimension(2, 2));
        jScrollPane1.setViewportView(TableVisiter);

        BtnAjoutVisiter.setForeground(new java.awt.Color(0, 0, 153));
        BtnAjoutVisiter.setText("Ajouter");
        BtnAjoutVisiter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAjoutVisiterActionPerformed(evt);
            }
        });

        BtnModifierVisiter.setForeground(new java.awt.Color(0, 0, 153));
        BtnModifierVisiter.setText("Modifier");
        BtnModifierVisiter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnModifierVisiterActionPerformed(evt);
            }
        });

        BtnSupprimerVisiter.setForeground(new java.awt.Color(153, 0, 0));
        BtnSupprimerVisiter.setText("Supprimer");
        BtnSupprimerVisiter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSupprimerVisiterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnAjoutVisiter)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(BtnModifierVisiter)
                                .addGap(18, 18, 18)
                                .addComponent(BtnSupprimerVisiter))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnAjoutVisiter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnSupprimerVisiter)
                    .addComponent(BtnModifierVisiter))
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnModifierVisiterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnModifierVisiterActionPerformed
         if (this.visiter.getId() == 0) {
                JOptionPane.showMessageDialog(this, "Veuillez sélectionnée une visite.", "Erreur", JOptionPane.ERROR_MESSAGE);
                return;
            }
        Visiter visiter = this.visiter;
        JDialogFormVisite formAjoutVisite = new JDialogFormVisite(null,true,"Update",this.visiter);
        formAjoutVisite.setVisible(true);
        selectVisiter();
    }//GEN-LAST:event_BtnModifierVisiterActionPerformed

    private void BtnAjoutVisiterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAjoutVisiterActionPerformed
        Visiter visiter = this.visiter;
        JDialogFormVisite formAjoutVisite = new JDialogFormVisite(null,true,"New");
        formAjoutVisite.setVisible(true);
        selectVisiter();
    }//GEN-LAST:event_BtnAjoutVisiterActionPerformed

    private void BtnSupprimerVisiterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSupprimerVisiterActionPerformed
         if (this.visiter.getId() == 0) {
                JOptionPane.showMessageDialog(this, "Veuillez sélectionnée une visite.", "Erreur", JOptionPane.ERROR_MESSAGE);
                return;
            }
        Visiter visiter = this.visiter;
        JDialogFormVisite formAjoutVisite = new JDialogFormVisite(null,true,this.visiter,"Delete");
        formAjoutVisite.setVisible(true);
        selectVisiter();
    }//GEN-LAST:event_BtnSupprimerVisiterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton BtnAjoutVisiter;
    private javax.swing.JToggleButton BtnModifierVisiter;
    private javax.swing.JToggleButton BtnSupprimerVisiter;
    private javax.swing.JTable TableVisiter;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
 DefaultTableModel tableModel = new DefaultTableModel(new Object[]{"id","medecin","patient","dateVisiter"},0);
  private void setTable() {
    TableVisiter = new JTable(tableModel);
    TableVisiter.setCellSelectionEnabled(true);
    TableVisiter.addMouseListener(this);
    jScrollPane1.setViewportView(TableVisiter);
    //JScrollPane scrollPane = new JScrollPane(TableMedecin);
    //add(scrollPane); // Ajoute la table dans ton interface (assure-toi que c'est bien placé dans ton layout)
}

  private VisiterDAO visiterList = new VisiterDAO();
  private void selectVisiter() {
    tableModel.setRowCount(0); // Réinitialise le tableau
    
    visiterList.getAllRendezVous().forEach(visiter -> {
        tableModel.addRow(new Object[]{
            visiter.getId(),
            visiter.getMedecin().getCodemed(),
            visiter.getPatient().getCodepat(),
            visiter.getDateVisite()
        });
    });
  }

    @Override
   public void mouseClicked(MouseEvent e) {
    if (e.getSource() == TableVisiter) {
        if (e.getButton() == MouseEvent.BUTTON1) {
            if (e.getClickCount() == 1) {
                int row = TableVisiter.getSelectedRow();
                if (row != -1) {
                    try {
                        // Assurez-vous que l'ID est bien en première colonne (ajuster si nécessaire)
                        int idVisiter = Integer.parseInt(TableVisiter.getValueAt(row, 0).toString());

                        // Récupération des données depuis la base avec l'ID
                        VisiterDAO visiterDao = new VisiterDAO();
                        Visiter visiter = visiterDao.getById(idVisiter);

                        if (visiter != null) {
                            this.visiter = visiter; // Met à jour l'objet sélectionné
                            System.out.println("Données chargées : " + visiter.getMedecin().getNom() + " - " +
                                    visiter.getPatient().getNom() + " - " + visiter.getDateVisite());
                        } else {
                            System.err.println("Aucun rendez-vous trouvé avec l'ID : " + idVisiter);
                        }
                    } catch (NumberFormatException ex) {
                        System.err.println("Erreur de conversion de l'ID : " + ex.getMessage());
                    } catch (Exception ex) {
                        System.err.println("Erreur lors de la récupération des données : " + ex.getMessage());
                    }
                }
            }
        }
    }
}

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }

}
